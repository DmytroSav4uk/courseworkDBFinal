IF NOT EXISTS (
    SELECT name
    FROM sys.databases
    WHERE name = 'SocialMedia'
)
BEGIN
    CREATE DATABASE SocialMedia;
END
GO


USE SocialMedia;
GO


CREATE TABLE Users (
    UserID INT PRIMARY KEY IDENTITY(1,1),
    Username NVARCHAR(50) UNIQUE NOT NULL,
    PasswordHash NVARCHAR(256) NOT NULL,
    Email NVARCHAR(100) UNIQUE NOT NULL,
    FullName NVARCHAR(100),
    Bio NVARCHAR(255),
    ProfileImage VARBINARY(MAX),
    CreatedAt DATETIME DEFAULT GETDATE()
);
GO


CREATE TABLE Posts (
    PostID INT PRIMARY KEY IDENTITY(1,1),
    UserID INT NOT NULL,
    Content NVARCHAR(MAX) NOT NULL,
    Image VARBINARY(MAX),
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE
);
GO


CREATE TABLE Likes (
    LikeID INT PRIMARY KEY IDENTITY(1,1),
    UserID INT NOT NULL,
    PostID INT NOT NULL,
    LikedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (PostID) REFERENCES Posts(PostID) ON DELETE NO ACTION,
    CONSTRAINT UC_UserPost UNIQUE (UserID, PostID)
);
GO


CREATE TABLE Comments (
    CommentID INT PRIMARY KEY IDENTITY(1,1),
    UserID INT NOT NULL,
    PostID INT NOT NULL,
    Content NVARCHAR(500) NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (PostID) REFERENCES Posts(PostID) ON DELETE NO ACTION
);
GO


CREATE TABLE Friendships (
    FriendshipID INT PRIMARY KEY IDENTITY(1,1),
    UserID1 INT NOT NULL,
    UserID2 INT NOT NULL,
    CreatedAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (UserID1) REFERENCES Users(UserID) ON DELETE NO ACTION,
    FOREIGN KEY (UserID2) REFERENCES Users(UserID) ON DELETE NO ACTION,
    CONSTRAINT UC_UserPair UNIQUE (UserID1, UserID2)
);
GO


CREATE TABLE Messages (
    MessageID INT PRIMARY KEY IDENTITY(1,1),
    SenderID INT NOT NULL,
    ReceiverID INT NOT NULL,
    Content NVARCHAR(MAX) NOT NULL,
    SentAt DATETIME DEFAULT GETDATE(),
    FOREIGN KEY (SenderID) REFERENCES Users(UserID) ON DELETE NO ACTION,
    FOREIGN KEY (ReceiverID) REFERENCES Users(UserID) ON DELETE NO ACTION
);
GO


CREATE UNIQUE INDEX IX_Username ON Users (Username);
GO

CREATE UNIQUE INDEX IX_Email ON Users (Email);
GO

CREATE INDEX IX_PostID_Likes ON Likes (PostID);
GO

CREATE INDEX IX_PostID_Comments ON Comments (PostID);
GO


use SocialMedia

EXEC AddLikeToPost @UserID = 33, @PostID = 26;

SELECT * FROM Posts WHERE PostId = 26